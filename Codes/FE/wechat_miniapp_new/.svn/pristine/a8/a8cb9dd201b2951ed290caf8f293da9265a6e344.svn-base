// pages/card-detail/card-detail.js
const utils = require('../../utils/util.js'),
  cardsService = require('../../services/cards.js'),
  activityService = require('../../services/activity-service.js'),
  userSvr = require("../../services/user-info.js")

Page({
  data: {
    userInfo: {},//个人信息
    detail: {}, //名片信息
    shareList: [],
    pagination: {
      total: 0,
      pageIndex: 1,//分页页码
      pageSize: 4,//一页显示几个数据
      dataMore: true
    },
    loading: true,
    activeTab: 1,
    scrollTop: 0,
    mine: null //是否是团队数据
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let self = this;
    this.data.origin = options.origin || '';
    this.data.id = options.id || '';
    this.data.from_user = options.from_user || '';
    this.data.from_company = options.from_company || '';
    this.data.selfUserId = getApp().globalData.userInfo.data[0].user_uuid;
    this.data.redpackId = options.redpackId || '';
    this.data.forwardingUser = options.forwardingUser || '';
    this.setData({
      isShowFastNav: self.data.origin == 'qrcode' || self.data.origin == 'share',
      redpackId: self.data.redpackId
    })
    if (this.data.from_user == this.data.selfUserId) {
      this.setData({
        selfInfo: true
      })
      this.data.from_user = '';
      this.data.origin = '';
    }

    if (!!this.data.from_user) {
      //用户埋点--查看名片
      utilStatistics.behaviorRecord({ type: "be_view_card", targetUser: self.data.from_user, targetClass: self.data.from_company, comment: "查看名片", action: "查看", forwardingUser: self.data.forwardingUser, clientType: 'weapp' }, () => { })
    }
  },
  onShow: function () {
    let self = this;
    this.getPersonalInfo();
    switch (this.data.origin) {
      case 'qrcode':
        new Promise((resolve, rejext) => {
          cardsService.getCustomConfig({ id: self.data.id }, function (err, res) {
            if (res.status == 0) {
              resolve(res.data);
            } else {
              reject();
            }
          })
        }).then((result) => {
          if (result.data.from_user == self.data.selfUserId) {//自己
            self.data.id = '';
            self.data.from_user = '';
            self.getPersonalInfo(() => {
              self.setData({
                detail: self.data.userInfo
              });
              self.getRecentProList();
              utils.createShareCover('canvas_cover_1', self.data.detail, self, () => {
                utils.createExchangeCover('canvas_cover_2', self.data.detail, self);
              })
            });
          } else {
            self.setData({ from_user: result.data.from_user, from_company: result.data.from_company });
            self.saveCard();
          }
        })
        break;
      case 'list': //名片夹过来的
        this.queryCardDetail(this.data.id, () => {
          self.getRecentProList();
          utils.createShareCover('canvas_cover_1', self.data.detail, self, () => {
            utils.createExchangeCover('canvas_cover_2', self.data.detail, self);
          })
        });
        break;
      case 'custom': //客户详情过来的
      case 'share': //分享名片过来的
        this.saveCard();
        break;
      default:
        this.getPersonalInfo(() => {
          self.setData({
            detail: self.data.userInfo,
            selfInfo: true
          });
          self.getRecentProList();
          utils.createShareCover('canvas_cover_1', self.data.detail, self, () => {
            utils.createExchangeCover('canvas_cover_2', self.data.detail, self);
          })
        });
    }
  },
  //保存别人分享的名片
  saveCard: function () {
    var self = this
      , data = {
        from_user: this.data.from_user,
        from_company: this.data.from_company,
        type: "1",
        status: "0"
      };

    cardsService.saveCard(data, (err, res) => {
      if (res.status == 0) {
        if (!res.data.isExist) {
          //用户埋点--保存名片
          setTimeout(() => {
            utilStatistics.behaviorRecord({ type: "be_save_card", targetUser: this.data.from_user, targetClass: this.data.from_company, comment: "保存发名片", action: "保存" }, () => { });
          }, 5000)
        }
        self.queryCardDetail(res.data.id, () => {
          self.getRecentProList();
          utils.createShareCover('canvas_cover_1', self.data.detail, self, () => {
            utils.createExchangeCover('canvas_cover_2', self.data.detail, self);
          })
        });
      } else {
        utils.toast.fail({
          title: res.message
        });
      }
    })
  },
  // 获取个人信息
  getPersonalInfo: function (callback) {
    var self = this;
    wx.showLoading({
      title: '数据加载中'
    });
    activityService.personalInfoQuery({}, (err, res) => {
      if (res.status == 0) {
        self.setData({
          userInfo: res.data,
          loading: false
        });
      } else {
        utils.toast.fail({
          title: "获取个人信息失败"
        });
      }
      !!callback && callback();
      wx.hideLoading();
    })
  },
  //可见不可见处理
  dataProcess: function (data, type, status) {
    if (!data[type]) return data[type];
    switch (data[status]) {
      case 1: break;
      case 2:
        if (!(data['status'] == '0' && data['type'] == '2')) {
          data[type] = data[type].substr(0, 3) + data[type].substr(3).replace(/[\s\S]/g, '*');
          data[type + '_tip'] = '仅交换名片可见';
        } else {
          data[type + '_tip'] = data[type];
        }
        break;
      case 3:
        data[type] = data[type].substr(0, 3) + data[type].substr(3).replace(/[\s\S]/g, '*');
        break;
    }
    return data[type];
  },
  //查询名片详情
  queryCardDetail: function (id, callback) {
    var self = this;
    cardsService.getCardInfo({ 'id': id }, (err, res) => {
      if (res.status == 0) {
        res.data.phone = self.dataProcess(res.data, 'phone', 'pvtPhone');
        res.data.email = self.dataProcess(res.data, 'email', 'pvtEmail');
        res.data.wxNo = self.dataProcess(res.data, 'wxNo', 'pvtWxNo');
        res.data.userId = res.data.from_user;//获取用户userid，保持字段名一致 mars 3.7
        //用户埋点--查看名片
        if (self.data.origin == 'list') {
          utilStatistics.behaviorRecord({ type: "be_view_card", targetUser: res.data.from_user, targetClass: res.data.from_company, comment: "查看名片", action: "查看", forwardingUser: self.data.forwardingUser, clientType: 'weapp' }, () => { })
        }

        self.setData({
          detail: res.data,
          loading: false
        });
      } else {
        utils.toast.fail({
          title: "获取名片信息失败"
        });
      }
      !!callback && callback();
    })
  },
  //获取最近推广列表
  getRecentProList: function (more) {
    var self = this
      , option = {
        cardUserId: self.data.detail.userId || self.data.detail.from_user,
        cardBusinessId: self.data.detail.businessId || self.data.detail.from_company,
        pageIndex: self.data.pagination.pageIndex,
        pageSize: self.data.pagination.pageSize
      };
    cardsService.getRecentProList(option, (err, res) => {
      if (res.status == 0) {
        if (parseInt(option.pageIndex) * parseInt(option.pageSize) >= parseInt(res.data.total)) {
          self.data.pagination.dataMore = false;
        }

        if (!!more) {//分页
          self.data.shareList = self.data.shareList.concat(res.data.list);
        } else {
          self.data.shareList = res.data.list;
        }
        self.setData({
          shareList: self.data.shareList
        });
      } else {
        utils.toast.fail({
          title: "获取最近推广列表失败"
        });
      }
    });
  },
  //发起交换名片申请
  exchangeRequest: function () {
    console.log(this.data.detail);
    let _option = {
      to_user: this.data.detail.from_user,
      from_company: this.data.userInfo.businessId
    }
    cardsService.exchangeRequst(_option, (err, res) => {
      let msg = '发起交换名片请求成功！';
      if (res.status == 0) {
        if (!!res.data.isPass) {
          msg = '对方已经同意了你的交换名片请求，无需再发！';
        }
      } else {
        msg = res.message
      }
      utils.toast.fail({
        title: msg
      });
    });
  },
  //跳转至发名片页面
  toPassCard: function () {
    wx.navigateTo({
      url: "/pages/pass-card/pass-card"
    })
  },
  //存入通讯录
  savePhone: function () {
    let self = this;
    wx.addPhoneContact({
      firstName: self.data.detail.name,
      photoFilePath: self.data.detail.face,
      mobilePhoneNumber: self.data.detail.phone,
      organization: self.data.detail.company,
      title: self.data.detail.job,
      email: self.data.detail.email,
      success: function () {
      },
      fail: function () {
      }
    });
  },
  //复制快捷键
  copyNumber: function (e) {
    let type = e.currentTarget.dataset.type
      , status = e.currentTarget.dataset.status
      , self = this;

    if (this.data.detail[type].indexOf('*') != -1) {
      let msg = this.data.detail[status] == 2 ? '仅交换名片可见' : '不可见';
      utils.toast.fail({
        title: msg
      });
      return false;
    }
    wx.setClipboardData({
      data: self.data.detail[type],
      success(res) {
        wx.getClipboardData({
          success(res) {
            console.log(res.data) // data
          }
        })
      }
    })
  },
  //调起拨号功能
  callPhone: function (e) {
    let phone = e.currentTarget.dataset.phone
      , tip = e.currentTarget.dataset.phonetip;

    if (!phone || tip == '仅交换名片可见') return false;

    wx.makePhoneCall({
      phoneNumber: phone
    })
  },
  //切换tab
  switchTab: function (e) {
    this.data.pagination.pageIndex = 1;
    this.data.pagination.dataMore = true;
    wx.showLoading({
      title: '数据加载中'
    });
    this.getRecentProList();
    setTimeout(() => {
      this.toTop();
      wx.hideLoading();
    }, 100);
    this.setData({ 'activeTab': parseInt(e.currentTarget.dataset.tab), scrollTop: 0 });
    if (this.data.activeTab == 1) {
      wx.setNavigationBarTitle({
        title: '名片详情'
      })
    } else {
      wx.setNavigationBarTitle({
        title: '推广内容'
      })
    }
  },
  //绑定手机
  getPhoneNumber: function (e) {
    var self = this;
    var app = getApp();

    if (e.detail.errMsg == 'getPhoneNumber:ok') {
      var userInfo = app.globalData.userInfo;
      console.log("shouji", userInfo, "e", e);
      wx.showLoading({
        title: '绑定中'
      });
      userSvr.bindPhone({
        sessionKey: userInfo.sessionKey,
        encryptedData: e.detail.encryptedData,
        iv: e.detail.iv,
        type: 0
      }, function (err, res) {
        wx.hideLoading();
        if (!!err) {
          utils.toast.fail({
            title: err.message
          });
          return;
        }
        self.onShow();
      })
    }
    // else {
    //   wx.navigateTo({
    //     url: '/pages/binding-phone/binding-phone',
    //   })
    // }
  },
  msgHandler: function () {
    wx.navigateTo({
      url: '/pages/messages-send/messages-send?accountid=' + this.data.detail.from_user + '&businessId=' + this.data.detail.from_company + '&isHasCard=true'
    })
  },
  onPageScroll: function (e) {//监听页面滚动
    this.setData({
      scrollTop: e.scrollTop
    })
  },
  toTop: function () {
    if (wx.pageScrollTo) {
      wx.pageScrollTo({
        duration: 0,
        scrollTop: 0
      });
    }
  },
  // 分享
  onShareAppMessage: function (e) {
    let self = this
      , shareType = e.from != 'button' ? '' : (e.target.dataset.type || '')
      , shareObj = {}
      , _param = '?from_user=';

    if (!!self.data.selfInfo) {
      _param += self.data.userInfo.userId + (!!self.data.userInfo.businessId ? '&from_company=' + self.data.userInfo.businessId : '') + '&forwardingUser=' + self.data.userInfo.userId;
    } else {
      _param += self.data.detail.from_user + (!!self.data.detail.from_company ? '&from_company=' + self.data.detail.from_company : '') + '&forwardingUser=' + self.data.userInfo.userId;
    }

    switch (shareType) {
      case "share":
        shareObj = {
          title: `你好，这是我的名片，请惠存`,
          path: `/pages/index/index?target=` + encodeURIComponent(`/pages/card-detail/card-detail${_param}&origin=share`),
          imageUrl: self.shareCoverImg
        }
        if (!!self.data.selfInfo) {
          utilStatistics.behaviorRecord({ type: "be_share_card", targetUser: '', targetClass: '', userClass: self.data.userInfo.businessId, comment: "分享名片", action: "分享", forwardingUser: self.data.userInfo.userId, clientType: 'weapp' }, () => { })
        } else {
          utilStatistics.behaviorRecord({ type: "be_forwarding_card", targetUser: self.data.detail.from_user, targetClass: self.data.detail.from_company, comment: "转发名片", action: "转发", forwardingUser: self.data.userInfo.userId, clientType: 'weapp' }, () => { })
        }
        break;
      case "exchange":
        shareObj = {
          title: `${self.data.detail.name} 邀请你交换名片`,
          path: `/pages/index/index?target=` + encodeURIComponent(`/pages/card-list/card-list${_param}&type=exchange`),
          imageUrl: self.exchangeCoverImg
        }
        if (!!self.data.selfInfo) {
          utilStatistics.behaviorRecord({ type: "be_exchange_card", targetUser: '', targetClass: '', userClass: self.data.userInfo.businessId, comment: "交换名片", action: "交换" }, () => { })
        }
        break;
    }
    return shareObj;
  },
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
    if (!this.data.pagination.dataMore) return false;

    this.data.pagination.pageIndex++;

    this.getRecentProList(true);
  },
  /**
 * 页面相关事件处理函数--监听用户下拉动作
 */
  onPullDownRefresh: function (e) {
    wx.showNavigationBarLoading();
    this.data.pagination.pageIndex = 1;
    this.data.pagination.dataMore = true;
    this.onShow();
    setTimeout(() => {
      wx.hideNavigationBarLoading();
      wx.stopPullDownRefresh();
    }, 100);
  },
  onHide: function () {
    this.data.pagination.pageIndex = 1;
    this.data.pagination.dataMore = true;
  }
})