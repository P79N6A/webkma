const
  activityService = require('../../services/activity-service.js'),
  statisticsService = require('../../services/statistics-service.js'),
  utils = require('../../utils/util.js')

let self;
Page({

  /**
   * 页面的初始数据
   */
  data: {
    showTitle:false,
    id: "",
    articleid: "",
    activeNavTab: "baseData",
    pageSize: 20,
    pamas:{

    },
    dataList: [{
      key: "share",
      title: "分享数",
      total: 0
    }, {
      key: "visitor",
      title: "访客数",
      total: 0
    }, {
      key: "access",
      title: "访问数",
      total: 0
    }],
    avgLifeTime: "", // 平均访问时长
    areaTopList: "", // 访问地区TOP排名
    pageStatus: "loading",
    plugPageStatus: "loading",
    tabNav:[
      { key: "formData", title: "报名", },
      { key: "goods", title: "商品" },
      { key: "redEnvelopes", title: "红包" },
      { key: "thumbup", title: "点赞" },
      { key: "vote", title: "投票" },
      { key: "reward", title: "中奖" },
      { key: "call", title: "拨号" }
    ],
    activePlugTab: "formData", //当前项
    listData: [ //投票记录
      { "code": "01", "text": "text1", "type": "type1" },
      { "code": "02", "text": "text2", "type": "type2" },
      { "code": "03", "text": "text3", "type": "type3" }
    ],
    bgcolor: ""
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    self = this;
    var bg = self.bgColor();
    self.setData({
      id: options.id,
      articleid: options.articleid,
      bgcolor: bg
    });
    console.log("参数", options)
    Promise.all([
      new Promise((resolve, reject) => {
        // 获取表单列表
        activityService.getFormList({
          id: self.data.id
        }, (err, res) => {
          if (err) {
            self.setData({
              formPageStatus: "error-network"
            });
            return reject(err);
          }
          if (res.status != 0) {
            self.setData({
              formPageStatus: "error-data"
            });
            return reject(res.message);
          }
          self.setData({
            formPageStatus: res.data.length == 0 ? "empty" : "",
            formList: res.data.map((item, index) => {
              return {
                controlId: item.controlId,
                name: item.name,
                total: item.total,
                todayTotal: item.todayTotal,
                _open: false,
                detail: {
                  _isLoading: false
                }
              }
            })
          });
          resolve();
        });
      }),
      new Promise((resolve, reject) => {
        //获取获取活动 - 统计现状
        statisticsService.aggsTypeByBelongModule({
          as_belong_module: [self.data.id]
        }, (err, res) => {
          if (err) return reject(err);
          if (res.status != 0) return reject(res.message);
          self.data.dataList.forEach(item => {
            item.total = res.data.group[0]["scan_" + item.key];
          });
          self.data.areaTopList = res.data.area_top_list.slice(0, 5).join("、");
          self.data.avgLifeTime = ((time) => {
            if (!time) return "";
            if (time < 60) return `${time}秒`;
            return `${Math.floor(time / 60)}分${Math.floor(time % 60)}秒`;
          })(res.data.avg_life_time);
          self.setData(self.data);
          resolve();
        });
      })
    ]).then(results => {
      self.setData({
        pageStatus: ""
      });
    }).catch(err => {
      self.setData({
        pageStatus: "error-data"
      });
      console.error(err);
    });
  },
  // 插件数据
  getKeyword(){

  },
    // 搜索
  getInfoCont(){
    
  },
  //------------ 插件数据结束
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },

  previewImage: function (e) {
    let urls = e.currentTarget.dataset.imgs.map(item => {
      return item.img
    });
    wx.previewImage({
      current: urls[e.currentTarget.id],
      urls: urls
    });
  },

  navbarTabChange: function (e) { //菜单tab切换
    self.setData({
      activeNavTab: e.detail.key
    });
    // switch (e.detail.key) {
    //   case "formData":
    //     self.getFormContent();
    //     break;
    // }
  },
  navPlurTabChange: function (e) { //插件tab切换
    console.log("eee", e.currentTarget.dataset.key)
    let isKey = e.currentTarget.dataset.key
    self.setData({
      activePlugTab: isKey,
      showTitle: isKey == 'formData'||isKey == 'goods'?false:true
    });
    console.log(this.data.showTitle)
    var list = this.data.tabNav;
    // for (var i in list) {
    //   console.log("lis",list[i].key)
    // }
    // switch (e.detail.key) {
    //   case "formData":
    //     self.getFormContent();
    //     break;
    // }
  },
  stopScroll: function (event) {
    event && event.stopPropagation && event.stopPropagation();
  },
  bgColor: function(){
    var i = 0;
    var str = "#";
    var random = 0;
    var aryNum = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"];

    for (i = 0; i < 6; i++) {
      random = parseInt(Math.random() * 16);

      str += aryNum[random];
    }
    return str
  } 
})